module TEMPLATE_REPAIRUNIT_ND(TEMPLATE_COMMON) is

	process REPAIRUNIT_ND [REPAIR : NAT_CHANNEL,
	                       REPAIRED : NAT_CHANNEL,
	                       REPAIRING : NAT_BOOL_CHANNEL,
	                       IMPOSSIBLE : none]
		(total : NAT)
	is
	var
		nr : NAT,
		repair_needed : BOOL_ARRAY,
		repair_busy : NAT,
		idx : NAT
	in
		repair_needed := BOOL_ARRAY(FALSE);
		repair_busy := 0 of NAT;
		loop
			select
				-- listen for repair
				REPAIR (?nr) where (0 < nr) and (nr <= total);
				if (repair_busy == nr) then
					IMPOSSIBLE; stop
				end if;
				repair_needed[nr] := TRUE
				
				-- Pick any BE in need of repair and start it.
				[] if (repair_busy == 0) then
					idx := any NAT where (idx > 0) and (idx <= total);
					if repair_needed[idx] then
						repair_needed[idx] := FALSE;
						repair_busy := idx;
						REPAIRING(!idx, TRUE)
					end if
				    end if

				-- Someone else is repairing the BE
				[]
					REPAIRING(?nr, FALSE) where
						(0 < nr) and (nr <= total);
					repair_needed[nr] := FALSE;
					if nr == repair_busy then
						IMPOSSIBLE; stop
					end if

				-- Ignore any BE that says it's done.
				[]
				REPAIRED (?nr) where (0 < nr) and (nr <= total);
				if (nr == repair_busy) then
					repair_needed[nr] := FALSE;
					repair_busy := 0
				end if
			end select
		end loop
	end var
	end process

end module 
